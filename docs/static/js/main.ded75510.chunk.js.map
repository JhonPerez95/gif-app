{"version":3,"sources":["components/CategoryAdd/CategoryAdd.js","components/ItemGrid/ItemGrid.js","helpers/getGifs.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","components/GifExpert/GifExperts.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","ItemGrid","title","url","className","src","alt","getGif","a","encodeURI","fetch","res","json","data","gifs","map","item","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExperts","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAczC,OACE,0BAAMC,OAAO,GAAGC,SARG,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAeR,GAAf,mBAA8BQ,OAC5CP,EAAc,OAKd,2BAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAbhB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,YCWZG,EAfE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACzB,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCUKK,EAjBH,uCAAG,WAAOX,GAAP,uBAAAY,EAAA,6DACPL,EADO,iDACyCM,UACpDb,GAFW,+DAIKc,MAAMP,GAJX,cAIPQ,EAJO,gBAKUA,EAAIC,OALd,uBAKLC,EALK,EAKLA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACTf,MAAOc,EAAKd,MACZC,IAAG,UAAEa,EAAKE,cAAP,aAAE,EAAaC,iBAAiBhB,QAV1B,kBAaNW,GAbM,4CAAH,sDC2BGM,EArBC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECJN,SAACA,GAAc,IAAD,EACdT,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRjB,EAAOX,GAAU6B,MAAK,SAACC,GACrBC,YAAW,WACTC,QAAQC,IAAIH,GACZH,EAAS,CACPV,KAAMa,EACNL,SAAS,MAEV,UAEJ,CAACzB,IAEG0B,EDb2BQ,CAAalC,GAAjCsB,EADkB,EACxBL,KAAcQ,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIjB,UAAU,qCAAd,IAAoDR,GAEnDyB,GAAW,uBAAGjB,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aACZc,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAUe,IAAKf,EAAKC,IAAQD,UEKvBgB,EAjBI,WAAO,IAAD,EACa7C,mBAAS,CAAC,WADvB,mBAChB8C,EADgB,KACJ/C,EADI,KAGvB,OACE,oCACE,0CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG+C,EAAWlB,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAASe,IAAKf,EAAMpB,SAAUoB,UCVxCkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ded75510.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryAdd = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((category) => [inputValue, ...category]);\n      setInputValue('');\n    }\n  };\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nCategoryAdd.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default CategoryAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemGrid = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__rubberBand\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nItemGrid.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default ItemGrid;\n","const getGif = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=9yYinLKzHxLHb3dW9bp84743eJHjb5sc`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map((item) => {\n    return {\n      id: item.id,\n      title: item.title,\n      url: item.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n  // console.log(gifs);\n};\n\nexport default getGif;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ItemGrid from '../ItemGrid/ItemGrid';\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\n\n      {loading && <p className=\"animate__animated animate__flash\"> Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((item) => (\n          <ItemGrid key={item.id} {...item} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport getGif from '../helpers/getGifs';\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGif(category).then((imgs) => {\n      setTimeout(() => {\n        console.log(imgs);\n        setstate({\n          data: imgs,\n          loading: false,\n        });\n      }, 1000);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport CategoryAdd from '../CategoryAdd/CategoryAdd';\nimport GifGrid from '../GifGrid/GifGrid';\n\nconst GifExperts = () => {\n  const [categories, setCategories] = useState(['naruto']);\n\n  return (\n    <>\n      <h1>GifExperts</h1>\n      <CategoryAdd setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((item) => (\n          <GifGrid key={item} category={item} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExperts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExperts from './components/GifExpert/GifExperts';\nReactDOM.render(\n  <React.StrictMode>\n    <GifExperts />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}